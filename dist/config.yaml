project_name: optimus-fun
release:
  github:
    owner: SumitAgrawal03071989
    name: optimus-fun
  prerelease: auto
  name_template: '{{.Tag}}'
brews:
- name: optimus-plugins-sumit
  tap:
    owner: sumitagrawal
    name: homebrew-taps
  commit_author:
    name: Sumit Agrawal
    email: sumitagrawa.03071989@gmail.com
  commit_msg_template: Brew formula update for {{ .ProjectName }} version {{ .Tag
    }}
  install: |
    bin.install Dir["optimus-*"]
  description: Optimus plugins - [Optimus Fun Generator]
  license: Apache 2.0
  goarm: "6"
scoop:
  name: optimus-fun
  commit_author:
    name: goreleaserbot
    email: goreleaser@carlosbecker.com
  commit_msg_template: Scoop update for {{ .ProjectName }} version {{ .Tag }}
builds:
- id: fun
  goos:
  - linux
  - darwin
  - windows
  goarch:
  - amd64
  - arm64
  goarm:
  - "6"
  gomips:
  - hardfloat
  targets:
  - linux_amd64
  - linux_arm64
  - darwin_amd64
  - darwin_arm64
  - windows_amd64
  - windows_arm64
  dir: ./task/fun
  main: .
  ldflags:
  - -s -w -X main.Version={{.Version}} -X main.Image=ghcr.io/sumitagrawal03071989/optimus-task-fun-executor
  binary: optimus-fun_{{.Os}}_{{.Arch}}
  env:
  - CGO_ENABLED=0
  builder: go
  gobinary: go
archives:
- id: default
  builds:
  - fun
  name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm
    }}v{{ .Arm }}{{ end }}{{ if .Mips }}_{{ .Mips }}{{ end }}'
  replacements:
    amd64: amd64
    darwin: darwin
    linux: linux
    windows: windows
  format: tar.gz
  format_overrides:
  - goos: windows
    format: zip
  files:
  - src: license*
  - src: LICENSE*
  - src: readme*
  - src: README*
  - src: changelog*
  - src: CHANGELOG*
  allow_different_binary_count: false
snapshot:
  name_template: '{{ .Tag }}-next'
checksum:
  name_template: checksums.txt
  algorithm: sha256
dockers:
- goos: linux
  goarch: amd64
  dockerfile: ./task/fun/executor/Dockerfile
  image_templates:
  - ghcr.io/sumitagrawal03071989/optimus-task-fun-executor:latest
  - ghcr.io/sumitagrawal03071989/optimus-task-fun-executor:{{ .Version }}
  extra_files:
  - task/fun/executor
  use: docker
changelog:
  filters:
    exclude:
    - '^docs:'
    - '^test:'
  sort: asc
dist: dist
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
before:
  hooks:
  - make test
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .GitURL
      }}/releases/tag/{{ .Tag }}'
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .GitURL }}/releases/tag/{{ .Tag }}'
  slack:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .GitURL
      }}/releases/tag/{{ .Tag }}'
    username: GoReleaser
  discord:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .GitURL
      }}/releases/tag/{{ .Tag }}'
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .GitURL
      }}/releases/tag/{{ .Tag }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .GitURL }}/releases/tag/{{ .Tag
      }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .GitURL
      }}/releases/tag/{{ .Tag }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
  telegram:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .GitURL
      }}/releases/tag/{{ .Tag }}'
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com
